(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{411:function(t,s,a){"use strict";a.r(s);var e=a(27),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"node-api-authorization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-api-authorization"}},[t._v("#")]),t._v(" Node API: Authorization")]),t._v(" "),a("h2",{attrs:{id:"rpc-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpc-api"}},[t._v("#")]),t._v(" RPC API")]),t._v(" "),a("p",[t._v("There are no authorization built into the RPC API, all users have full access to all API methods.")]),t._v(" "),a("h2",{attrs:{id:"rest-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest-api"}},[t._v("#")]),t._v(" REST API")]),t._v(" "),a("p",[t._v("The REST API have role based access control. Key and roles is controlled through the appsettings.json file.")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Roles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"User"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Admin"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("Authorization is handled through tags on controllers or operations.")]),t._v(" "),a("p",[t._v("Here is example taken from the Shutdown operation, which is only accessible for admin keys:")]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[Authorize(Policy = "OnlyAdmins")]\n[HttpPost]\n[Route("shutdown")]\n[Route("stop")]\npublic IActionResult Shutdown([FromBody] bool corsProtection = true)\n{\n    this.fullNode?.NodeLifetime.StopApplication();\n    return this.Ok();\n}\n')])])]),a("h3",{attrs:{id:"unauthorized-401"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unauthorized-401"}},[t._v("#")]),t._v(" Unauthorized (401)")]),t._v(" "),a("p",[t._v("When a request is not authorized with the API key, it will return an HTTP 401 Unauthorized result. If you get HTTP 500 error, that means there might be a configuration or other issues with the node.")]),t._v(" "),a("p",[t._v("The JSON body result will be:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://httpstatuses.com/401"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unauthorized"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);